data List = Rec L -> <Nil:Unit, Cons:(Int, L)>;
-- ((\y:List -> case (unfold [List] y) of
--     <Nil = a> -> 0 |
--     <Cons = b> -> (fst b)) (fold [List] <Cons = (1, (fold [List]
--     <Nil = unit> as List))> as List))

((\y:List -> case (unfold [List] y) of
    <Nil = a> -> 0 |
    <Cons = b> -> (fst b)) ((\z:Unit -> (fold [List] <Cons = (1, (fold [List]
    <Nil = unit> as List))> as List))
    unit))
