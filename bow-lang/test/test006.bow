type Either A B = {Left(A) | Right(B)}

type Opt A = {Some(A) | Nothing()}

def f(x) {
    case x of {
        Some(y) -> y;
        Nothing() -> false;
    }
}

def g(x) {
    case x of {
        Left(y) -> y;
        Right(y) -> y;
    }
}

g(Left(1))
g(Left(true))

// f(Nothing())
